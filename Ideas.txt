Image d'entrée : Format bitmap
On vise l'obtention d'un format binaire avant la partie ocr, avec un 1 pour les blancs et un 0 pour les noirs, et un nobmre d'octets égal au nombre de pixels dans l'image.

Installer un "hexreader" pour avoir une idée de la bitmap
lire wiki bitmap format

limite: reconaissance uniquement des textes horizontaux

Découpage du projet: 
1) Interface graphique, gtk3, avec des accès à:
-chargement d'une image à reconnaitre
-stockage des résultats de la reconaissance
-statistiques, apprentissage/entrainement ...


2) Pré-traitement de l'image pour passer d'un fichier bitmap (de 1 à 24 bits) à un fichier binaire.

https://fr.wikipedia.org/wiki/Windows_bitmap
https://en.wikipedia.org/wiki/BMP_file_format

2.1) Traitement de l'image pour obtenir le fichier binaire.

Se documenter sur un algorythme anti-bruit.
Et un autre pour la reconaissance des contours... 

Autres ?

2.2) Traitement du fichier binaire pour obtenir les lignes et les caractères qui constituent l'input du module 3.


3) Ecrire l'algo du réseau neuronal. Chercher des images publiques de caractères afin d'entrainer le réseau.
Stocker les résultats de l'entrainement dans des fichiers, et utiliser ces fichiers lors de la reconnaissance finale.


Avoir deux dicos, les chercher dans des bases libres de droits, français et anglais.
Avoir un mot par ligne, il est possible de dériver des mots qui n'existent pas à l'aide de conjugaison.
Limitations: une seule langue reconnue à la fois.

------------------------
5/10: pour la génération du fichier Makefile à partir de la configuration codeblocks:
sudo apt-install cdb2make

https://sourceforge.net/p/cbp2make/wiki/Home/

Ensuite:
cbp2make -in Oeil_De_Surimi.cbp -out Makefile

-----------------------
Créer une structure représentant le NN (neural network). Ce qu'il faudrait paramétrer (entre autres):
- nombre de inputs
- nombre de outputs
- nombre de couches intermédiaires (hidden layers)
- nombre de neurones par couche intermédiaire (pour simplifier, le même nombre de neurones pour toutes les couches intermédiaires)
- les weights entre les couches + les bias
- la fonction utilisée pour les calculs (sigmoïde, ...)
- ...
/-----------------------
8/10
Pas trouvé un ensemble d'images avec l'alphabet pour l'entraînement du réseau.
Pour éviter de générer les images une à une avec Photoshop ou autre, on va les générer par un script php

1. Instaler PHP:
sudo apt install php7.2-cli
sudo apt install hhvm
sudo apt install php-gd

2. (Optionnellement) Les polices Verdana, Georgia, Times New Roman, Courrier New sont la propriété de Microsoft, mais peuvent être installées sous Linux.
Lire: https://www.pcworld.com/article/2863497/how-to-install-microsoft-fonts-in-linux-office-suites.html
Optionnellement, installer donc ces polices avec:

sudo apt-get install ttf-mscorefonts-installer

3. Copier quelques fonts dans ./train/fonts et exécuter le script php dans ./train
Le script PHP a été récupéré sur https://boyter.org/2013/09/collection-letters-training/ et est en cours de modification pour générer des images bitmap N/B bitmap avec la bonne taille etc.




